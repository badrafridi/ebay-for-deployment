{"ast":null,"code":"var _jsxFileName = \"E:\\\\git\\\\ebay\\\\frontend\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { UserContext } from \"./userContext\";\nimport { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\nimport { useEffect, useState, useMemo } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Topbar from \"./components/topbar/Topbar\";\nimport Login from \"./pages/login/Login\";\nimport Home from \"./pages/home/Home\";\nimport Footer from \"./components/footer/Footer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [usertop, setUsertop] = useState(null);\n  const providerValue = useMemo(() => ({\n    usertop,\n    setUsertop\n  }), [usertop, setUsertop]); // getting user data like name etc\n\n  const getUser = () => {\n    fetch(\"http://localhost:4000/api/user\", {\n      method: \"GET\",\n      credentials: \"include\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Credentials\": true\n      }\n    }).then(res => res.json()).then(res => {\n      if (res.user) {\n        setUsertop(res.user[0]);\n      } else {\n        console.log(\"user not found\");\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  useEffect(() => {\n    getUser();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: providerValue,\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [usertop ? /*#__PURE__*/_jsxDEV(Topbar, {\n        usertop: usertop\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 20\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          element: usertop ? /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 32\n          }, this) : /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 54\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: usertop ? /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 32\n          }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), usertop ? /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 20\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"IZDe24J+duS6kW6ZeDINFuVh/EE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["E:/git/ebay/frontend/src/App.js"],"names":["UserContext","BrowserRouter","Router","Routes","Route","Navigate","useEffect","useState","useMemo","Link","Topbar","Login","Home","Footer","App","usertop","setUsertop","providerValue","getUser","fetch","method","credentials","headers","Accept","then","res","json","user","console","log","catch","err"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,eAA5B;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,MAFF,EAGEC,KAHF,EAIEC,QAJF,QAKO,kBALP;AAMA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,OAA9B,QAA6C,OAA7C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,IAAD,CAAtC;AAEA,QAAMU,aAAa,GAAGT,OAAO,CAC3B,OAAO;AAAEO,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAP,CAD2B,EAE3B,CAACD,OAAD,EAAUC,UAAV,CAF2B,CAA7B,CAHa,CAQb;;AACA,QAAME,OAAO,GAAG,MAAM;AACpBC,IAAAA,KAAK,CAAC,gCAAD,EAAmC;AACtCC,MAAAA,MAAM,EAAE,KAD8B;AAEtCC,MAAAA,WAAW,EAAE,SAFyB;AAGtCC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,kBADD;AAEP,wBAAgB,kBAFT;AAGP,4CAAoC;AAH7B;AAH6B,KAAnC,CAAL,CASGC,IATH,CASSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EATjB,EAUGF,IAVH,CAUSC,GAAD,IAAS;AACb,UAAIA,GAAG,CAACE,IAAR,EAAc;AACZX,QAAAA,UAAU,CAACS,GAAG,CAACE,IAAJ,CAAS,CAAT,CAAD,CAAV;AACD,OAFD,MAEO;AACLC,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACD;AACF,KAhBH,EAkBGC,KAlBH,CAkBUC,GAAD,IAAS;AACdH,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACD,KApBH;AAqBD,GAtBD;;AAuBAzB,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,OAAO;AACR,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAED,aAA7B;AAAA,2BACE,QAAC,MAAD;AAAA,iBACGF,OAAO,gBAAG,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEA;AAAjB;AAAA;AAAA;AAAA;AAAA,cAAH,gBAAkC,qCAD5C,eAEE,QAAC,MAAD;AAAA,gCAEE,QAAC,KAAD;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,OAAO,EAAEA,OAAO,gBAAG,QAAC,QAAD;AAAU,YAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,kBAAH,gBAAyB,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAF3C;AAAA;AAAA;AAAA;AAAA,gBAFF,eAOE,QAAC,KAAD;AACE,UAAA,IAAI,EAAC,GADP;AAEE,UAAA,OAAO,EAAEA,OAAO,gBAAG,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,kBAAH,gBAAc,QAAC,QAAD;AAAU,YAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAFhC;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAcGA,OAAO,gBAAG,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAAH,gBAAgB,qCAd1B;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GAxDQD,G;;KAAAA,G;AA0DT,eAAeA,GAAf","sourcesContent":["import { UserContext } from \"./userContext\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Routes,\r\n  Route,\r\n  Navigate,\r\n} from \"react-router-dom\";\r\nimport { useEffect, useState, useMemo } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Topbar from \"./components/topbar/Topbar\";\r\nimport Login from \"./pages/login/Login\";\r\nimport Home from \"./pages/home/Home\";\r\nimport Footer from \"./components/footer/Footer\";\r\n\r\nfunction App() {\r\n  const [usertop, setUsertop] = useState(null);\r\n\r\n  const providerValue = useMemo(\r\n    () => ({ usertop, setUsertop }),\r\n    [usertop, setUsertop]\r\n  );\r\n\r\n  // getting user data like name etc\r\n  const getUser = () => {\r\n    fetch(\"http://localhost:4000/api/user\", {\r\n      method: \"GET\",\r\n      credentials: \"include\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        \"Access-Control-Allow-Credentials\": true,\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        if (res.user) {\r\n          setUsertop(res.user[0]);\r\n        } else {\r\n          console.log(\"user not found\");\r\n        }\r\n      })\r\n\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    getUser();\r\n  }, []);\r\n\r\n  return (\r\n    <UserContext.Provider value={providerValue}>\r\n      <Router>\r\n        {usertop ? <Topbar usertop={usertop} /> : <></>}\r\n        <Routes>\r\n          {/* -------- admin routes ---------- */}\r\n          <Route\r\n            path=\"/login\"\r\n            element={usertop ? <Navigate to=\"/\" /> : <Login />}\r\n          />\r\n\r\n          <Route\r\n            path=\"/\"\r\n            element={usertop ? <Home /> : <Navigate to=\"/login\" />}\r\n          />\r\n        </Routes>\r\n        {usertop ? <Footer /> : <></>}\r\n      </Router>\r\n    </UserContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}