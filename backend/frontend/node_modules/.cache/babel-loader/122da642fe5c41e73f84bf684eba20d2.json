{"ast":null,"code":"var _jsxFileName = \"E:\\\\git\\\\ebay\\\\frontend\\\\src\\\\pages\\\\single_auction\\\\Single_auction.jsx\",\n    _s = $RefreshSig$();\n\nimport { useLocation } from \"react-router-dom\";\nimport { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport swal from \"sweetalert\";\nimport { UserContext } from \"../../userContext\";\nimport { CartContext } from \"../../cartContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Single_auction() {\n  _s();\n\n  const {\n    usertop,\n    setUsertop\n  } = useContext(UserContext);\n  const location = useLocation();\n  const id = location.pathname.split(\"/\")[2];\n  const [orderdetails, setOrderdetails] = useState([]);\n  const [buyer, setBuyer] = useState(false);\n  const [auctiondetails, setAuctiondetails] = useState([]); // const getSingleorder = () => {\n  //     axios({\n  //         method: \"GET\",\n  //         withCredentials: true,\n  //         url: \"http://localhost:4000/api/getproductsforcart/\" + id,\n  //     })\n  //         .then((res) => {\n  //             setOrderdetails(res.data.row[0])\n  //             console.log(res.data.row[0])\n  //             if(res.data.row[0].user_id == usertop.id){\n  //                 setBuyer(true)\n  //             }\n  //         })\n  //         .catch((error) => {\n  //             console.log(error);\n  //         });\n  // }\n  // const markDelivered = (order_id) => {\n  //     axios({\n  //         method: \"POST\",\n  //         data: {\n  //             order_id,\n  //         },\n  //         withCredentials: true,\n  //         url: \"http://localhost:4000/api/markasdelivered\",\n  //     })\n  //         .then((res) => {\n  //             if(res.data.message == \"successfully delivered\"){\n  //                 swal({\n  //                   title: \"You have successfully marked the order as delivered.\",\n  //                   text: \"Customer can now accept the delivery to complete this order\",\n  //                   icon: \"success\",\n  //                   button: \"Ok\",\n  //                 });\n  //               }\n  //               getSingleorder();\n  //         })\n  //         .catch((error) => {\n  //             console.log(error);\n  //         });\n  // }\n  // const orderReceived = (order_id) => {\n  //     axios({\n  //         method: \"POST\",\n  //         data: {\n  //             order_id,\n  //         },\n  //         withCredentials: true,\n  //         url: \"http://localhost:4000/api/markascompleted\",\n  //     })\n  //         .then((res) => {\n  //             console.log(res)\n  //             if(res.data.message == \"order successfully completed\"){\n  //                 swal({\n  //                   title: \"You have successfully marked the order as completed.\",\n  //                   text: \"\",\n  //                   icon: \"success\",\n  //                   button: \"Ok\",\n  //                 });\n  //               }\n  //               getSingleorder();\n  //         })\n  //         .catch((error) => {\n  //             console.log(error);\n  //         });\n  // }\n\n  const getAuctionDetails = () => {\n    axios({\n      method: \"GET\",\n      withCredentials: true,\n      url: \"http://localhost:4000/api/allsingleauctiondetailstwo/\" + id\n    }).then(res => {\n      console.log(res);\n\n      if (res.data.message == \"here are the auction details\") {\n        console.log(res);\n        setAuctiondetails(res.data.row[0]); //   var x = res.data.row[0].end_date;\n        //   if (new Date(x).toLocaleString() < new Date().toLocaleString()) {\n        //     console.log(\"auction time has passed\");\n        //     setTimepassed(true);\n        //   }\n      } else {\n        console.log(\"this is direct product\");\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  useEffect(() => {\n    getAuctionDetails();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Product Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Product Name: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), auctiondetails.product_name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Product Description: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), auctiondetails.end_date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Product Original Price: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), auctiondetails.original_price]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Auction Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Auction Status: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), auctiondetails.status == \"sold\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"green\",\n            children: \"Sold\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this)\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"red\",\n            style: {\n              display: \"inline-block\",\n              marginBottom: \"0px\"\n            },\n            children: \"Not sold\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this)\n        }, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Auction Ending Date: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), auctiondetails.end_date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Last Bid: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), auctiondetails.last_bid]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Last Bidder: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), auctiondetails.buyer]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Buyer Address: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), auctiondetails.address]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), auctiondetails.status == \"not sold\" && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"red\",\n        children: \"Please wait for the Auction time to end\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Single_auction, \"hLEI7dzPzx2NSLmJNatjBCBNDco=\", false, function () {\n  return [useLocation];\n});\n\n_c = Single_auction;\n\nvar _c;\n\n$RefreshReg$(_c, \"Single_auction\");","map":{"version":3,"sources":["E:/git/ebay/frontend/src/pages/single_auction/Single_auction.jsx"],"names":["useLocation","useState","useEffect","useContext","axios","swal","UserContext","CartContext","Single_auction","usertop","setUsertop","location","id","pathname","split","orderdetails","setOrderdetails","buyer","setBuyer","auctiondetails","setAuctiondetails","getAuctionDetails","method","withCredentials","url","then","res","console","log","data","message","row","catch","error","product_name","end_date","original_price","status","display","marginBottom","last_bid","address"],"mappings":"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","sourcesContent":["import { useLocation } from \"react-router-dom\";\r\nimport { useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport swal from \"sweetalert\";\r\n\r\nimport { UserContext } from \"../../userContext\";\r\nimport { CartContext } from \"../../cartContext\";\r\n\r\nexport default function Single_auction() {\r\n  const { usertop, setUsertop } = useContext(UserContext);\r\n  const location = useLocation();\r\n  const id = location.pathname.split(\"/\")[2];\r\n  const [orderdetails, setOrderdetails] = useState([]);\r\n  const [buyer, setBuyer] = useState(false);\r\n  const [auctiondetails, setAuctiondetails] = useState([]);\r\n\r\n  // const getSingleorder = () => {\r\n  //     axios({\r\n  //         method: \"GET\",\r\n  //         withCredentials: true,\r\n  //         url: \"http://localhost:4000/api/getproductsforcart/\" + id,\r\n  //     })\r\n  //         .then((res) => {\r\n\r\n  //             setOrderdetails(res.data.row[0])\r\n  //             console.log(res.data.row[0])\r\n  //             if(res.data.row[0].user_id == usertop.id){\r\n  //                 setBuyer(true)\r\n  //             }\r\n  //         })\r\n  //         .catch((error) => {\r\n  //             console.log(error);\r\n  //         });\r\n  // }\r\n\r\n  // const markDelivered = (order_id) => {\r\n\r\n  //     axios({\r\n  //         method: \"POST\",\r\n  //         data: {\r\n  //             order_id,\r\n  //         },\r\n  //         withCredentials: true,\r\n  //         url: \"http://localhost:4000/api/markasdelivered\",\r\n  //     })\r\n  //         .then((res) => {\r\n\r\n  //             if(res.data.message == \"successfully delivered\"){\r\n  //                 swal({\r\n  //                   title: \"You have successfully marked the order as delivered.\",\r\n  //                   text: \"Customer can now accept the delivery to complete this order\",\r\n  //                   icon: \"success\",\r\n  //                   button: \"Ok\",\r\n  //                 });\r\n  //               }\r\n  //               getSingleorder();\r\n  //         })\r\n  //         .catch((error) => {\r\n  //             console.log(error);\r\n  //         });\r\n\r\n  // }\r\n\r\n  // const orderReceived = (order_id) => {\r\n  //     axios({\r\n  //         method: \"POST\",\r\n  //         data: {\r\n  //             order_id,\r\n  //         },\r\n  //         withCredentials: true,\r\n  //         url: \"http://localhost:4000/api/markascompleted\",\r\n  //     })\r\n  //         .then((res) => {\r\n  //             console.log(res)\r\n\r\n  //             if(res.data.message == \"order successfully completed\"){\r\n  //                 swal({\r\n  //                   title: \"You have successfully marked the order as completed.\",\r\n  //                   text: \"\",\r\n  //                   icon: \"success\",\r\n  //                   button: \"Ok\",\r\n  //                 });\r\n  //               }\r\n  //               getSingleorder();\r\n  //         })\r\n  //         .catch((error) => {\r\n  //             console.log(error);\r\n  //         });\r\n  // }\r\n\r\n  const getAuctionDetails = () => {\r\n    axios({\r\n      method: \"GET\",\r\n      withCredentials: true,\r\n      url: \"http://localhost:4000/api/allsingleauctiondetailstwo/\" + id,\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.message == \"here are the auction details\") {\r\n          console.log(res);\r\n          setAuctiondetails(res.data.row[0]);\r\n          //   var x = res.data.row[0].end_date;\r\n          //   if (new Date(x).toLocaleString() < new Date().toLocaleString()) {\r\n          //     console.log(\"auction time has passed\");\r\n          //     setTimepassed(true);\r\n          //   }\r\n        } else {\r\n          console.log(\"this is direct product\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAuctionDetails();\r\n  }, []);\r\n  return (\r\n    <>\r\n      <div className=\"page\">\r\n        <h2>Product Details</h2>\r\n        <p>\r\n          <b>Product Name: </b>\r\n          {auctiondetails.product_name}\r\n        </p>\r\n        <p>\r\n          <b>Product Description: </b>\r\n          {auctiondetails.end_date}\r\n        </p>\r\n        <p>\r\n          <b>Product Original Price: </b>\r\n          {auctiondetails.original_price}\r\n        </p>\r\n        <h2>Auction Details</h2>\r\n        <p>\r\n          <b>Auction Status: </b>\r\n          {auctiondetails.status == \"sold\" ? (\r\n            <>\r\n              <p className=\"green\">Sold</p>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <p\r\n                className=\"red\"\r\n                style={{ display: \"inline-block\", marginBottom: \"0px\" }}\r\n              >\r\n                Not sold\r\n              </p>\r\n            </>\r\n          )}\r\n        </p>\r\n        <p>\r\n          <b>Auction Ending Date: </b>\r\n          {auctiondetails.end_date}\r\n        </p>\r\n        <p>\r\n          <b>Last Bid: </b>\r\n          {auctiondetails.last_bid}\r\n        </p>\r\n        <p>\r\n          <b>Last Bidder: </b>\r\n          {auctiondetails.buyer}\r\n        </p>\r\n        <p>\r\n          <b>Buyer Address: </b>\r\n          {auctiondetails.address}\r\n        </p>\r\n        <br></br>\r\n        <br></br>\r\n\r\n        {auctiondetails.status == \"not sold\" && (\r\n          <p className=\"red\">Please wait for the Auction time to end</p>\r\n        )}\r\n\r\n        {/* {buyer ? (<> {orderdetails.status == \"delivered\" ? (<><button onClick={()=>{\r\n                    orderReceived(orderdetails.id);\r\n                }} className=\"btn btn-primary btn-block mb-4\">Received</button></>) : orderdetails.status==\"pending\" ? (<>Please wait for the seller to deliver the order</>) : (<>The order is completed</>)}\r\n                \r\n                </>) : (<>{orderdetails.status == \"delivered\" ? <p className=\"green\">Order submitted as delivered. please wait for the customer to accept.</p> :  (<><p className=\"red\">Please deliver this order as soon as possible.</p><button onClick={()=>{\r\n                    markDelivered(orderdetails.id);\r\n                }} className=\"btn btn-primary btn-block mb-4\">Mark as delivered</button></>)}</>) } */}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}