{"ast":null,"code":"var _jsxFileName = \"E:\\\\git\\\\ebay\\\\frontend\\\\src\\\\admin\\\\all_orders\\\\All_orders.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useContext, useRef } from \"react\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport axios from \"axios\";\nimport swal from \"sweetalert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  field: \"id\",\n  headerName: \"ID\",\n  width: 70\n}, {\n  field: \"name\",\n  headerName: \"Product name\",\n  width: 270\n}, {\n  field: \"price\",\n  headerName: \"Price\",\n  width: 100,\n  type: \"number\"\n}, {\n  field: \"buyer_name\",\n  headerName: \"Buyer name\",\n  width: 130\n}, {\n  field: \"buyer_phone\",\n  headerName: \"Buyer phone\",\n  width: 130\n}, {\n  field: \"seller_name\",\n  headerName: \"Seller name\",\n  width: 130\n}, {\n  field: \"seller_phone\",\n  headerName: \"Seller phone\",\n  width: 130\n}, {\n  field: \"order_status\",\n  headerName: \"Order Status\",\n  width: 130\n}, {\n  field: \"date\",\n  headerName: \"Date\",\n  width: 130\n} // {\n//   field: \"age\",\n//   headerName: \"Age\",\n//   type: \"number\",\n//   width: 90,\n// },\n// {\n//   field: \"fullName\",\n//   headerName: \"Full name\",\n//   description: \"This column has a value getter and is not sortable.\",\n//   sortable: false,\n//   width: 160,\n//   valueGetter: (params) =>\n//     `${params.row.firstName || \"\"} ${params.row.lastName || \"\"}`,\n// },\n]; // const rows = [\n//   { id: 1, lastName: \"Snow\", firstName: \"Jon\", age: 35 },\n//   { id: 2, lastName: \"Lannister\", firstName: \"Cersei\", age: 42 },\n//   { id: 3, lastName: \"Lannister\", firstName: \"Jaime\", age: 45 },\n//   { id: 4, lastName: \"Stark\", firstName: \"Arya\", age: 16 },\n//   { id: 5, lastName: \"Targaryen\", firstName: \"Daenerys\", age: null },\n//   { id: 6, lastName: \"Melisandre\", firstName: null, age: 150 },\n//   { id: 7, lastName: \"Clifford\", firstName: \"Ferrara\", age: 44 },\n//   { id: 8, lastName: \"Frances\", firstName: \"Rossini\", age: 36 },\n//   { id: 9, lastName: \"Roxie\", firstName: \"Harvey\", age: 65 },\n// ];\n\nexport default function All_orders() {\n  _s();\n\n  const [allorders, setAllorders] = useState([]);\n\n  const getallorders = () => {\n    console.log(\"func furn\");\n    axios({\n      method: \"GET\",\n      withCredentials: true,\n      url: \"http://localhost:4000/api/allorders/\"\n    }).then(res => {\n      console.log(res);\n      setAllorders(res.data.row);\n      console.log(res.data.row);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  useEffect(() => {\n    getallorders();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"heading\",\n        children: \"All Orders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: 650,\n          width: \"100%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(DataGrid, {\n          rows: allorders,\n          columns: columns,\n          pageSize: 10,\n          rowsPerPageOptions: [5],\n          disableSelectionOnClick: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(All_orders, \"ZQ5ASe8TMWY08bMG5e2staT/TkU=\");\n\n_c = All_orders;\n\nvar _c;\n\n$RefreshReg$(_c, \"All_orders\");","map":{"version":3,"sources":["E:/git/ebay/frontend/src/admin/all_orders/All_orders.jsx"],"names":["useState","useEffect","useContext","useRef","DataGrid","axios","swal","columns","field","headerName","width","type","All_orders","allorders","setAllorders","getallorders","console","log","method","withCredentials","url","then","res","data","row","catch","err","height"],"mappings":"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","sourcesContent":["import { useState, useEffect, useContext, useRef } from \"react\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\n\r\nimport axios from \"axios\";\r\nimport swal from \"sweetalert\";\r\n\r\nconst columns = [\r\n  { field: \"id\", headerName: \"ID\", width: 70 },\r\n  { field: \"name\", headerName: \"Product name\", width: 270 },\r\n  { field: \"price\", headerName: \"Price\", width: 100, type: \"number\" },\r\n  { field: \"buyer_name\", headerName: \"Buyer name\", width: 130 },\r\n  { field: \"buyer_phone\", headerName: \"Buyer phone\", width: 130 },\r\n  { field: \"seller_name\", headerName: \"Seller name\", width: 130 },\r\n  { field: \"seller_phone\", headerName: \"Seller phone\", width: 130 },\r\n  { field: \"order_status\", headerName: \"Order Status\", width: 130 },\r\n  { field: \"date\", headerName: \"Date\", width: 130 },\r\n\r\n  // {\r\n  //   field: \"age\",\r\n  //   headerName: \"Age\",\r\n  //   type: \"number\",\r\n  //   width: 90,\r\n  // },\r\n  // {\r\n  //   field: \"fullName\",\r\n  //   headerName: \"Full name\",\r\n  //   description: \"This column has a value getter and is not sortable.\",\r\n  //   sortable: false,\r\n  //   width: 160,\r\n  //   valueGetter: (params) =>\r\n  //     `${params.row.firstName || \"\"} ${params.row.lastName || \"\"}`,\r\n  // },\r\n];\r\n\r\n// const rows = [\r\n//   { id: 1, lastName: \"Snow\", firstName: \"Jon\", age: 35 },\r\n//   { id: 2, lastName: \"Lannister\", firstName: \"Cersei\", age: 42 },\r\n//   { id: 3, lastName: \"Lannister\", firstName: \"Jaime\", age: 45 },\r\n//   { id: 4, lastName: \"Stark\", firstName: \"Arya\", age: 16 },\r\n//   { id: 5, lastName: \"Targaryen\", firstName: \"Daenerys\", age: null },\r\n//   { id: 6, lastName: \"Melisandre\", firstName: null, age: 150 },\r\n//   { id: 7, lastName: \"Clifford\", firstName: \"Ferrara\", age: 44 },\r\n//   { id: 8, lastName: \"Frances\", firstName: \"Rossini\", age: 36 },\r\n//   { id: 9, lastName: \"Roxie\", firstName: \"Harvey\", age: 65 },\r\n// ];\r\n\r\nexport default function All_orders() {\r\n  const [allorders, setAllorders] = useState([]);\r\n\r\n  const getallorders = () => {\r\n    console.log(\"func furn\");\r\n    axios({\r\n      method: \"GET\",\r\n      withCredentials: true,\r\n      url: \"http://localhost:4000/api/allorders/\",\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        setAllorders(res.data.row);\r\n        console.log(res.data.row);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getallorders();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"page\">\r\n        <h2 className=\"heading\">All Orders</h2>\r\n        <div style={{ height: 650, width: \"100%\" }}>\r\n          <DataGrid\r\n            rows={allorders}\r\n            columns={columns}\r\n            pageSize={10}\r\n            rowsPerPageOptions={[5]}\r\n            disableSelectionOnClick\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}