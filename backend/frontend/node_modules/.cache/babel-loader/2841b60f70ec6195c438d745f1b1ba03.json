{"ast":null,"code":"var _jsxFileName = \"E:\\\\git\\\\ebay\\\\frontend\\\\src\\\\pages\\\\single_product\\\\Single_product.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useContext, useRef } from \"react\";\nimport \"./single_product.css\";\nimport axios from \"axios\";\nimport { useLocation } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { UserContext } from \"../../userContext\";\nimport { CartContext } from \"../../cartContext\";\nimport swal from \"sweetalert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Single_product() {\n  _s();\n\n  const {\n    usertop,\n    setUsertop\n  } = useContext(UserContext);\n  const {\n    cart,\n    setCart\n  } = useContext(CartContext);\n  const [product, setProduct] = useState([]);\n  const location = useLocation();\n  const id = location.pathname.split(\"/\")[2];\n  const [error, setError] = useState();\n  const [timepassed, setTimepassed] = useState(false);\n  const bid = useRef(0);\n\n  const getProduct = () => {\n    axios({\n      method: \"GET\",\n      withCredentials: true,\n      url: \"http://localhost:4000/api/allsingleproduct/\" + id\n    }).then(res => {\n      console.log(res);\n      setProduct(res.data.row[0]);\n\n      if (res.data.row[0].type == \"auction\") {\n        var x = res.data.row[0].end_date;\n\n        if (new Date(x).toLocaleString() < new Date().toLocaleString()) {\n          console.log(\"auction time has passed\");\n          setTimepassed(true);\n        }\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const placeBid = () => {\n    const bidx = bid.current.value;\n    const product_id = product.id;\n    axios({\n      method: \"PUT\",\n      withCredentials: true,\n      data: {\n        bidx,\n        product_id\n      },\n      url: \"http://localhost:4000/api/placebid/\"\n    }).then(res => {\n      getProduct();\n      document.getElementById(\"bid\").value = \"\";\n      swal({\n        title: \"Bid successfully placed\",\n        text: \"you can check the bid status on your account page.\",\n        icon: \"success\",\n        button: \"Ok\"\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const addtocart = () => {\n    console.log(typeof cart);\n\n    if (cart != null) {\n      var alreadyincart = cart.includes(product.id);\n\n      if (alreadyincart) {\n        setError(\"cannot add product to cart. product already in cart\");\n      } else {\n        arr = [...cart];\n        arr.push(product.id);\n        setCart(arr);\n        setError(\"\");\n        swal({\n          title: \"Product added to cart successfully\",\n          text: \"you can see this product in your cart\",\n          icon: \"success\",\n          button: \"Ok\"\n        });\n      }\n    } else {\n      var arr = [product.id];\n      setCart(arr);\n      swal({\n        title: \"Product added to cart successfully\",\n        text: \"you can see this product in your cart\",\n        icon: \"success\",\n        button: \"Ok\"\n      });\n    }\n  };\n\n  useEffect(() => {\n    getProduct();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Single_product, \"GReVNu9re4jHlKDtp6ycHCfocGo=\", false, function () {\n  return [useLocation];\n});\n\n_c = Single_product;\n\nvar _c;\n\n$RefreshReg$(_c, \"Single_product\");","map":{"version":3,"sources":["E:/git/ebay/frontend/src/pages/single_product/Single_product.jsx"],"names":["useState","useEffect","useContext","useRef","axios","useLocation","Link","UserContext","CartContext","swal","Single_product","usertop","setUsertop","cart","setCart","product","setProduct","location","id","pathname","split","error","setError","timepassed","setTimepassed","bid","getProduct","method","withCredentials","url","then","res","console","log","data","row","type","x","end_date","Date","toLocaleString","catch","placeBid","bidx","current","value","product_id","document","getElementById","title","text","icon","button","addtocart","alreadyincart","includes","arr","push"],"mappings":"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","sourcesContent":["import { useState, useEffect, useContext, useRef } from \"react\";\r\nimport \"./single_product.css\";\r\nimport axios from \"axios\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UserContext } from \"../../userContext\";\r\nimport { CartContext } from \"../../cartContext\";\r\nimport swal from \"sweetalert\";\r\n\r\nexport default function Single_product() {\r\n  const { usertop, setUsertop } = useContext(UserContext);\r\n  const { cart, setCart } = useContext(CartContext);\r\n  const [product, setProduct] = useState([]);\r\n  const location = useLocation();\r\n  const id = location.pathname.split(\"/\")[2];\r\n  const [error, setError] = useState();\r\n  const [timepassed, setTimepassed] = useState(false);\r\n  const bid = useRef(0);\r\n\r\n  const getProduct = () => {\r\n    axios({\r\n      method: \"GET\",\r\n      withCredentials: true,\r\n      url: \"http://localhost:4000/api/allsingleproduct/\" + id,\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        setProduct(res.data.row[0]);\r\n        if (res.data.row[0].type == \"auction\") {\r\n          var x = res.data.row[0].end_date;\r\n          if (new Date(x).toLocaleString() < new Date().toLocaleString()) {\r\n            console.log(\"auction time has passed\");\r\n            setTimepassed(true);\r\n          }\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const placeBid = () => {\r\n    const bidx = bid.current.value;\r\n    const product_id = product.id;\r\n    axios({\r\n      method: \"PUT\",\r\n      withCredentials: true,\r\n      data: { bidx, product_id },\r\n      url: \"http://localhost:4000/api/placebid/\",\r\n    })\r\n      .then((res) => {\r\n        getProduct();\r\n        document.getElementById(\"bid\").value = \"\";\r\n        swal({\r\n          title: \"Bid successfully placed\",\r\n          text: \"you can check the bid status on your account page.\",\r\n          icon: \"success\",\r\n          button: \"Ok\",\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const addtocart = () => {\r\n    console.log(typeof cart);\r\n    if (cart != null) {\r\n      var alreadyincart = cart.includes(product.id);\r\n      if (alreadyincart) {\r\n        setError(\"cannot add product to cart. product already in cart\");\r\n      } else {\r\n        arr = [...cart];\r\n        arr.push(product.id);\r\n        setCart(arr);\r\n        setError(\"\");\r\n        swal({\r\n          title: \"Product added to cart successfully\",\r\n          text: \"you can see this product in your cart\",\r\n          icon: \"success\",\r\n          button: \"Ok\",\r\n        });\r\n      }\r\n    } else {\r\n      var arr = [product.id];\r\n      setCart(arr);\r\n      swal({\r\n        title: \"Product added to cart successfully\",\r\n        text: \"you can see this product in your cart\",\r\n        icon: \"success\",\r\n        button: \"Ok\",\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getProduct();\r\n  }, []);\r\n  return (\r\n    <>\r\n      <div className=\"page\">\r\n        {/* <div className=\"flexRow twoColumns\">\r\n          <div className=\"flexColumn full productPageProductImageBlock\">\r\n            <img\r\n              src={\r\n                product.url ? \"http://localhost:4000/images/\" + product.url : \"\"\r\n              }\r\n            ></img>\r\n          </div>\r\n          <div className=\"flexColumn full productPageProductDetailsBlock\">\r\n            <p style={{ fontSize: \"14px\" }}>\r\n              <b>Category: </b>\r\n              <Link to={\"/category/\" + product.category_name}>\r\n                {product.category_name}\r\n              </Link>\r\n            </p>\r\n            <h3 style={{ fontSize: \"34px\" }}>{product.name}</h3>\r\n            <h3 style={{ fontSize: \"21px\" }}>Price: {product.price}</h3>\r\n            <p>{product.description}</p>\r\n            <p>\r\n              <b>Buying Method: </b>\r\n              {product.type}\r\n            </p>\r\n            {product.type == \"direct\" ? (\r\n              <>\r\n                {!usertop ? (\r\n                  <>Please login to add product to the cart</>\r\n                ) : usertop.id == product.user_id ? (\r\n                  <>You can not place an order on your own product</>\r\n                ) : (\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add to Cart\"\r\n                    className=\"btn btn-primary btn-block mb-4\"\r\n                    onClick={(e) => {\r\n                      addtocart(e);\r\n                    }}\r\n                  ></input>\r\n                )}\r\n\r\n                <p\r\n                  className=\"error\"\r\n                  style={{ color: \"red\", marginTop: \"10px\" }}\r\n                >\r\n                  {error}\r\n                </p>\r\n              </>\r\n            ) : (\r\n              <>\r\n                {timepassed ? (\r\n                  <>\r\n                    <p className=\"red\">\r\n                      Sorry, auction time has ended on{\" \"}\r\n                      {new Date(product.end_date).toLocaleString()}\r\n                    </p>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <b>Last bid: </b>\r\n                    {product.last_bid}\r\n                    <br />\r\n                    <b>Bid ending time: </b>\r\n                    {new Date(product.end_date).toLocaleString()}\r\n                    <br />\r\n                    <b>Last bidder name: </b>\r\n                    {product.username}\r\n                    <br />\r\n                    <div\r\n                      className=\"form-outline mb-4\"\r\n                      style={{ marginTop: \"30px\" }}\r\n                    >\r\n                      <input\r\n                        type=\"number\"\r\n                        id=\"bid\"\r\n                        placeholder=\"Your Bid\"\r\n                        className=\"form-control\"\r\n                        ref={bid}\r\n                      ></input>\r\n                    </div>\r\n                    <div className=\"mb-4\">\r\n                      <input\r\n                        style={{ width: \"100%\" }}\r\n                        type=\"submit\"\r\n                        value=\"Place Bid\"\r\n                        className=\"btn btn-primary btn-block mb-4\"\r\n                        onClick={() => {\r\n                          placeBid();\r\n                        }}\r\n                      ></input>\r\n                    </div>\r\n                  </>\r\n                )}\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"flexRow twoColumns\"></div>\r\n        <div className=\"flexRow twoColumns\"></div> */}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}